
spring.datasource.url=jdbc:mysql://192.168.1.18:3306/testt?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=!QAZ2wsx



spring.shardingsphere.mode.type=Cluster
spring.shardingsphere.mode.repository.type=ZooKeeper
spring.shardingsphere.mode.repository.props.namespace=spring-boot-shardingsphere-test
spring.shardingsphere.mode.repository.props.server-lists=127.0.0.1:2181
spring.shardingsphere.mode.overwrite=true

#mybatis.type-aliases-package=com.example.mysqlmyb.dto

spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=50
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.filters=stat,wall,slf4j

#spring.shardingsphere.schema.name=sharding


spring.shardingsphere.datasource.names=saleorder01
spring.shardingsphere.datasource.saleorder01.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.saleorder01.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.saleorder01.jdbc-url=jdbc:mysql://192.168.1.18:3306/testt?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.saleorder01.username=root
spring.shardingsphere.datasource.saleorder01.password=!QAZ2wsx
spring.shardingsphere.datasource.saleorder01.initial-size=5
spring.shardingsphere.datasource.saleorder01.min-idle=5
spring.shardingsphere.datasource.saleorder01.maxActive=20
spring.shardingsphere.datasource.saleorder01.maxWait=60000
spring.shardingsphere.datasource.saleorder01.timeBetweenEvictionRunsMillis=60000
spring.shardingsphere.datasource.saleorder01.minEvictableIdleTimeMillis=300000
spring.shardingsphere.datasource.saleorder01.validationQuery=SELECT 1 
spring.shardingsphere.datasource.saleorder01.testWhileIdle=true
spring.shardingsphere.datasource.saleorder01.testOnBorrow=false
spring.shardingsphere.datasource.saleorder01.testOnReturn=false
spring.shardingsphere.datasource.saleorder01.poolPreparedStatements=true
spring.shardingsphere.datasource.saleorder01.maxPoolPreparedStatementPerConnectionSize=20
spring.shardingsphere.datasource.saleorder01.filters=stat,wall,log4j2
spring.shardingsphere.datasource.saleorder01.connectionProperties=druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000


#spring.shardingsphere.sharding.default-data-source-name=saleorder01
#spring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=id
#spring.shardingsphere.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.example.mysqlmyb.config.DatabasePreciseShardingAlgorithm

#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline


spring.shardingsphere.rules.sharding.binding-tables=User

#spring.shardingsphere.sharding.tables.User.actual-data-nodes=saleorder0$->{1..1}.User
spring.shardingsphere.rules.sharding.tables.User.actual-data-nodes=saleorder0$->{1..1}.User$->{0..2}

spring.shardingsphere.rules.sharding.tables.User.table-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.User.table-strategy.standard.sharding-algorithmName=tableinline

spring.shardingsphere.rules.sharding.sharding-algorithms.tableinline.type=INLINE

spring.shardingsphere.rules.sharding.sharding-algorithms.tableinline.props.algorithm-expression=User$->{id % 2}

#spring.shardingsphere.sharding.tables.User.table-strategy.standard.sharding-column=id
#spring.shardingsphere.sharding.tables.User.table-strategy.standard.precise-algorithm-class-name=com.example.mysqlmyb.config.OrderTablePreciseShardingAlgorithm

#spring.shardingsphere.props.sql.show=true

#
#mybatis.mapper-locations=classpath:com.example.mysqlmyb.mapper/*Mapper.xml
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl





